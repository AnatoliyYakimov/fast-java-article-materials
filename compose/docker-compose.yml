version: "3"
services:
  postgres:
    image: postgres:latest
    ports:
      - "35432:5432"
    command: postgres -c 'max_connections=1000'
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '2'
          memory: 2G
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      #      - pg-data:/var/lib/postgresql/data
      - ./init-script.sql:/docker-entrypoint-initdb.d/init.sql
  nima:
    build:
      context: ../example-nima
      dockerfile: Dockerfile
    environment:
      DB_JDBC-URL: jdbc:postgresql://postgres:5432/postgres
      JAVA_OPTS: -XX:InitialRAMPercentage=90.0 -XX:MaxRAMPercentage=90.0
      POOL_SIZE: 100
    ports:
      - "8082:8080"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '1'
          memory: 1G
    depends_on:
      - postgres
  spring-webflux:
    build:
      context: ../example-spring-webflux
      dockerfile: Dockerfile
    environment:
      spring_r2dbc_url: r2dbc:postgresql://postgres:5432/postgres
      JAVA_OPTS: -XX:InitialRAMPercentage=90.0 -XX:MaxRAMPercentage=90.0
      POOL_SIZE: 100
    ports:
      - "8081:8080"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '1'
          memory: 1G
    depends_on:
      - postgres
  spring-mvc:
    build:
      context: ../example-spring-mvc
      dockerfile: Dockerfile
    environment:
      spring_datasource_url: jdbc:postgresql://postgres:5432/postgres
      JAVA_OPTS: -XX:InitialRAMPercentage=90.0 -XX:MaxRAMPercentage=90.0
      POOL_SIZE: 100
    ports:
      - "8083:8080"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '1'
          memory: 1G
    depends_on:
      - postgres
volumes:
  pg-data: